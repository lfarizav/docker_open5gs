connections {
   rw {
      local_addrs  = OSMOEPDG_IP
      local {
         id = %any
         auth = eap-aka
      }
      remote {
         auth = eap-aka
      }
      children {
         net {
            local_ts = 0.0.0.0/0
            # only catch traffic which contains this fwmark. Ensures all traffic will be routed via the P-GW
            # and not short cut when a UE sends traffic to another UE on the same ePDG.
            mark_in = IPSEC_TRAFFIC_FWMARK
            mark_out = GTP_TRAFFIC_FWMARK
            # updown = /usr/lib/ipsec/_updown iptables
            esp_proposals = default
         }
      }
      version = 2
      # proposals = null-md5-prfmd5-null-ecp192
      # proposals = AES_CBC_128-HMAC_SHA1_96-PRF_HMAC_SHA1-MODP_2048
      proposals = aes256-sha256-prfsha256-modp2048,aes256-sha1-prfsha1-modp2048,aes256-sha512-prfsha512-modp2048,aes256-sha256-prfsha256-modp3072,aes256-sha256-prfsha256-ecp256,aes128-sha256-prfsha256-modp2048,aes128-sha1-prfsha1-modp2048,aes128-aesxcbc-prfaesxcbc-modp2048,aes128-sha256-prfsha256-modp1536,aes128-sha1-prfsha1-modp1536,aes256-sha256-prfsha256-modp1536,aes256-sha1-prfsha1-modp1536,aes128-sha256-prfsha256-modp1024,aes128-sha1-prfsha1-modp1024,aes128-aesxcbc-prfaesxcbc-modp1024,aes256-sha256-prfsha256-modp1024,aes256-sha1-prfsha1-modp1024,aes256-aesxcbc-prfaesxcbc-modp1024,aes128-sha256-modp3072,aes128-sha1-modp1024,default
   }
}

secrets {
}

pools {
}

